import 'package:flutter/material.dart';
import 'package:pozadkey_v3/utils/constants/colors.dart';

class ImageLoader extends StatelessWidget {
  final String imagePath;
  final String title;

  const ImageLoader({
    Key? key,
    required this.imagePath,
    required this.title,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    if (imagePath.isEmpty) {
      return Container(
        color: Colors.grey,
        child: Center(
          child:
              Text("No image available", style: TextStyle(color: Colors.white)),
        ),
      );
    }

    return FutureBuilder(
      future: _preloadImage(context, imagePath),
      builder: (context, snapshot) {
        return Container(
          decoration: BoxDecoration(
            color: Colors.black, // Fallback background color
            image: snapshot.connectionState == ConnectionState.done
                ? DecorationImage(
                    image: AssetImage(imagePath), // Correct path
                    fit: BoxFit.cover,
                  )
                : null,
            borderRadius: BorderRadius.circular(3.0),
            border: Border.all(
              color: Colors.grey.shade800,
            ),
          ),
          height: 250, // Height of the image container
          width: double.infinity, // Makes it responsive
          alignment: Alignment.center, // Centers the text inside
          child: snapshot.connectionState != ConnectionState.done
              ? CircularProgressIndicator(
                  backgroundColor: PrimaryButtonColors.textColor,
                  color: PrimaryButtonColors.bgColor)
              : Text(
                  imagePath.isNotEmpty ? '' : title,
                  style: Theme.of(context).textTheme.displaySmall!.copyWith(
                    color: Colors.white,
                    fontSize: 24,
                    shadows: [
                      Shadow(
                        offset: const Offset(0, 1),
                        blurRadius: 5,
                        color: Colors.black.withOpacity(0.5),
                      ),
                    ],
                  ),
                  textAlign: TextAlign.center,
                ),
        );
      },
    );
  }

  Future<void> _preloadImage(BuildContext context, String path) async {
    await precacheImage(AssetImage(path), context);
  }
}
